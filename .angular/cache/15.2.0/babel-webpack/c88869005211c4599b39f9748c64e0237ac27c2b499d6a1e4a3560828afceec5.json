{"ast":null,"code":"import { ElementRef, EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"tiles\"];\nconst _c1 = function () {\n  return {\n    \"tile\": 1\n  };\n};\nfunction BackgroundGridComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function BackgroundGridComponent_div_2_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onClick(item_r2, !ctx_r3.isActive, true));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(1, _c1));\n  }\n}\nexport class BackgroundGridComponent {\n  constructor(cdref) {\n    this.cdref = cdref;\n    this.col = Math.floor(document.body.clientWidth / 50);\n    this.row = Math.floor(document.body.clientHeight / 50);\n    this.createSquares = qua => {\n      this.items = [...Array(qua).keys()];\n    };\n    this.createGrid = () => {\n      this.col = Math.floor(document.body.clientWidth / 50);\n      this.row = Math.floor(document.body.clientHeight / 50) + 1;\n      this.tiles.nativeElement.style.setProperty('--col', this.col);\n      this.tiles.nativeElement.style.setProperty('--row', this.row);\n      this.createSquares(this.col * this.row);\n    };\n    this.isActive = false;\n    this.start = false;\n    this.messageEvent = new EventEmitter();\n  }\n  ngAfterViewInit() {\n    this.createGrid();\n    window.addEventListener('resize', this.createGrid);\n    this.cdref.detectChanges();\n  }\n  onClick(index, setValue = true, userClick = false) {\n    if (this.tiles.nativeElement.children[index].classList.contains('active') === setValue || this.start === false) {\n      return;\n    }\n    if (userClick) {\n      setTimeout(() => {\n        this.isActive = !this.isActive;\n        this.messageEvent.emit(\"Hola Mundo!\");\n      }, 500);\n    }\n    const delay = 50;\n    if (setValue) {\n      this.tiles.nativeElement.children[index].classList.add('active');\n    } else {\n      this.tiles.nativeElement.children[index].classList.remove('active');\n    }\n    const indexDown = index + this.col;\n    const indexUp = index - this.col;\n    const indexLeft = index - 1;\n    const indexRight = index + 1;\n    const count = this.col * this.row;\n    if (indexDown < count) {\n      setTimeout(() => {\n        this.onClick(indexDown, setValue);\n      }, delay);\n    }\n    if (indexUp < count && indexUp >= 0) {\n      setTimeout(() => {\n        this.onClick(indexUp, setValue);\n      }, delay);\n    }\n    if (indexLeft % this.col < this.col - 1 && indexLeft < count && indexLeft >= 0) {\n      setTimeout(() => {\n        this.onClick(indexLeft, setValue);\n      }, delay);\n    }\n    if (indexRight % this.col > 0 && indexRight < count) {\n      setTimeout(() => {\n        this.onClick(indexRight, setValue);\n      }, delay);\n    }\n  }\n  ngOnChanges() {\n    if (this.message === undefined) {\n      return;\n    }\n    this.start = true;\n    this.onClick(Number(this.message), true, true);\n  }\n}\nBackgroundGridComponent.ɵfac = function BackgroundGridComponent_Factory(t) {\n  return new (t || BackgroundGridComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nBackgroundGridComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BackgroundGridComponent,\n  selectors: [[\"app-background-grid\"]],\n  viewQuery: function BackgroundGridComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5, ElementRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tiles = _t.first);\n    }\n  },\n  inputs: {\n    message: \"message\"\n  },\n  outputs: {\n    messageEvent: \"messageEvent\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"tiles\"], [\"tiles\", \"\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"click\"]],\n  template: function BackgroundGridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, BackgroundGridComponent_div_2_Template, 2, 2, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf],\n  styles: [\".tiles[_ngcontent-%COMP%]{\\n    height: 100%;\\n    width: 100%;\\n    display: grid;\\n    grid-template-columns: repeat(var(--col), 1fr);\\n    grid-template-rows: repeat(var(--row), 1fr);\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n}\\n\\n.tile[_ngcontent-%COMP%] {\\n  top:auto;\\n  left:auto;\\n  height: 50px;\\n  width: 50px;\\n  width: 100%;\\n  margin: 0;\\n  \\n}\\n\\n.active[_ngcontent-%COMP%] {\\n  background-color: #0f62fe;\\n}\\n\\n.active[_ngcontent-%COMP%]:hover {\\n  background-color: #0f63fec5;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYmFja2dyb3VuZC1ncmlkL2JhY2tncm91bmQtZ3JpZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7SUFDWCxhQUFhO0lBQ2IsOENBQThDO0lBQzlDLDJDQUEyQztJQUMzQyxrQkFBa0I7SUFDbEIsTUFBTTtJQUNOLE9BQU87QUFDWDs7QUFFQTtFQUNFLFFBQVE7RUFDUixTQUFTO0VBQ1QsWUFBWTtFQUNaLFdBQVc7RUFDWCxXQUFXO0VBQ1gsU0FBUztFQUNULDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3QiIsInNvdXJjZXNDb250ZW50IjpbIi50aWxlc3tcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCh2YXIoLS1jb2wpLCAxZnIpO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KHZhcigtLXJvdyksIDFmcik7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xufVxuXG4udGlsZSB7XG4gIHRvcDphdXRvO1xuICBsZWZ0OmF1dG87XG4gIGhlaWdodDogNTBweDtcbiAgd2lkdGg6IDUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDA7XG4gIC8qIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOyAgKi9cbn1cblxuLmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwZjYyZmU7XG59XG5cbi5hY3RpdmU6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGY2M2ZlYzU7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["ElementRef","EventEmitter","i0","BackgroundGridComponent","constructor","cdref","Math","floor","document","body","clientWidth","clientHeight","qua","items","Array","keys","col","row","tiles","nativeElement","style","setProperty","createSquares","ngAfterViewInit","createGrid","window","addEventListener","detectChanges","onClick","index","setValue","userClick","children","classList","contains","start","setTimeout","isActive","messageEvent","emit","delay","add","remove","indexDown","indexUp","indexLeft","indexRight","count","ngOnChanges","message","undefined","Number","selectors","viewQuery"],"sourceRoot":"","sources":["/Users/danielajagbusi/Desktop/untitled folder/my-resume(Angular)/src/app/background-grid/background-grid.component.ts"],"sourcesContent":["import { Component, ElementRef, ViewChild, ChangeDetectorRef, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-background-grid',\n  template: `<div #tiles class=\"tiles\">\n      <div *ngFor=\"let item of items\">\n        <div [ngClass]=\"{'tile': 1}\" (click)=\"onClick(item, !this.isActive, true)\"></div>\n      </div>\n  </div>`,\n  styleUrls: ['./background-grid.component.css'],\n})\nexport class BackgroundGridComponent {\n  @ViewChild('tiles', { read: ElementRef }) tiles!: ElementRef;\n\n  col = Math.floor(document.body.clientWidth / 50);\n  row = Math.floor(document.body.clientHeight / 50);\n  items: number[] | undefined;\n\n  createSquares = (qua: any) => {\n    this.items = [...Array(qua).keys()]\n  };\n  constructor( private cdref: ChangeDetectorRef ) {} \n  createGrid = () => {\n    this.col = Math.floor(document.body.clientWidth / 50);\n    this.row = Math.floor(document.body.clientHeight / 50)+1;\n    this.tiles.nativeElement.style.setProperty('--col', this.col);\n    this.tiles.nativeElement.style.setProperty('--row', this.row);\n    this.createSquares(this.col * this.row);\n  };\n  ngAfterViewInit() {\n    this.createGrid();\n    window.addEventListener('resize', this.createGrid);\n    this.cdref.detectChanges();\n  }\n  isActive = false;\n  start = false;\n  onClick(index: number, setValue = true, userClick = false) {\n    if (this.tiles.nativeElement.children[index].classList.contains('active') === setValue || this.start === false){\n      return;\n    }\n    if (userClick) {\n      setTimeout(() => {this.isActive = !this.isActive;\n        this.messageEvent.emit(\"Hola Mundo!\");\n      }, 500);\n    }\n    const delay = 50;\n\n    if (setValue) {\n    this.tiles.nativeElement.children[index].classList.add('active');\n    } else {\n      this.tiles.nativeElement.children[index].classList.remove('active');\n    }\n\n    const indexDown = index + this.col;\n    const indexUp = index - this.col;\n    const indexLeft = index -1;\n    const indexRight = index +1;\n    const count=this.col * this.row\n    if (indexDown < count) {\n      setTimeout(() => {this.onClick(indexDown, setValue);}, delay); \n    }\n    if (indexUp < count && indexUp >= 0) {\n      setTimeout(() => {this.onClick(indexUp, setValue);}, delay); \n    }\n    if (indexLeft % this.col < this.col - 1 && indexLeft < count && indexLeft >= 0) {\n      setTimeout(() => {this.onClick(indexLeft, setValue);}, delay); \n    }\n    if (indexRight % this.col > 0 && indexRight < count) {\n      setTimeout(() => {this.onClick(indexRight, setValue);}, delay); \n    } \n  }\n  @Input() message!: string;\n  ngOnChanges() {\n    if (this.message === undefined) {\n      return;\n    }\n    this.start = true;\n    this.onClick(Number(this.message), true, true);\n  }\n  @Output() messageEvent = new EventEmitter<string>();\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}