{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction TypingAnimationComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h1\", 1);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const element_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.mainDivClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.classArr[i_r2]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r1);\n  }\n}\nexport class TypingAnimationComponent {\n  constructor() {\n    this.mainDivClass = '';\n    this.textToTypeArr = [\"Hey, I'm Daniel.\", \"I'm a software developer @\", 'IBM', 'Based in Austin, TX.'];\n    this.typingTextArr = Array(this.textToTypeArr.length).fill('');\n    this.classArr = Array(this.textToTypeArr.length).fill('');\n    this.lineIndex = 0;\n    this.typingText = '';\n    this.messageEvent = new EventEmitter();\n  }\n  updateLine(num) {\n    switch (num) {\n      case 0:\n        setTimeout(() => {\n          this.typingTextArr[num] = this.typingTextArr[num].replace(/Hey/gi, '👋');\n        }, 750);\n        break;\n      case 1:\n        setTimeout(() => {\n          this.typingTextArr[num] = this.typingTextArr[num].replace(/developer/gi, '👨‍💻');\n        }, 1000);\n        break;\n      case 2:\n        setTimeout(() => {\n          this.mainDivClass += 'ibm-font';\n          this.classArr[num] = 'title';\n          //this.messageEvent.emit(\"1\");\n          let col = Math.floor(document.body.clientWidth / 100);\n          let row = Math.floor(document.body.clientHeight / 100);\n          this.messageEvent.emit(Math.floor(col * row * .192).toString());\n        }, 1000);\n        break;\n      default:\n      // code block\n    }\n    //this.classArr[num] = 'highlight';\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.startTypingAnimationInt(0);\n    }, 1500);\n  }\n  startTypingAnimationInt(lineNum) {\n    this.lineIndex += 1;\n    let i = 0;\n    const typingInterval = setInterval(() => {\n      if (i < this.textToTypeArr[lineNum].length) {\n        this.typingTextArr[lineNum] += this.textToTypeArr[lineNum].charAt(i);\n        i++;\n      } else {\n        clearInterval(typingInterval);\n        if (i === this.textToTypeArr[lineNum].length) {\n          if (lineNum < this.textToTypeArr.length - 1) {\n            this.updateLine(lineNum);\n            this.startTypingAnimationInt(lineNum + 1);\n          }\n        }\n      }\n    }, 100);\n  }\n  ngOnChanges() {\n    if (this.toggle) {\n      this.classArr = this.classArr.map(str => str + ' white');\n    } else {\n      this.classArr = this.classArr.map(str => str.replace(' white', ''));\n    }\n  }\n}\nTypingAnimationComponent.ɵfac = function TypingAnimationComponent_Factory(t) {\n  return new (t || TypingAnimationComponent)();\n};\nTypingAnimationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TypingAnimationComponent,\n  selectors: [[\"app-typing-animation\"]],\n  inputs: {\n    toggle: \"toggle\"\n  },\n  outputs: {\n    messageEvent: \"messageEvent\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"]],\n  template: function TypingAnimationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TypingAnimationComponent_div_0_Template, 3, 3, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.typingTextArr);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf],\n  styles: [\"h1[_ngcontent-%COMP%]{text-align:center;transition:all .75s ease}.title[_ngcontent-%COMP%]{font-size:3rem;font-weight:bolder;font-family:IBM Plex Sans,sans-serif;margin:0}.ibm-font[_ngcontent-%COMP%]{font-family:Arial,sans-serif}.white[_ngcontent-%COMP%]{color:#fff}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}